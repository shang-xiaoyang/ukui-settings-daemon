/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ukui-scale-dbus.xml -a ukui-scale-adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef UKUI-SCALE-ADAPTOR_H
#define UKUI-SCALE-ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.ukui.SettingsDaemon.Scale
 */
class ScaleAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.ukui.SettingsDaemon.Scale")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.ukui.SettingsDaemon.Scale\">\n"
"    <signal name=\"setScreenModeSignal\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"screenName\"/>\n"
"    </signal>\n"
"    <signal name=\"setNumScreenModeSignal\">\n"
"      <arg direction=\"out\" type=\"as\" name=\"stringList\"/>\n"
"    </signal>\n"
"    <method name=\"setScreenMode\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"screenName\"/>\n"
"      <arg direction=\"in\" type=\"(iiii)\" name=\"geometry\"/>\n"
"      <annotation value=\"QRect\" name=\"org.qtproject.QtDBus.QtTypeName.In1\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"primary\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"rotation\"/>\n"
"      <arg direction=\"in\" type=\"d\" name=\"scale\"/>\n"
"    </method>\n"
"    <method name=\"setNumScreenMode\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"      <arg direction=\"in\" type=\"as\" name=\"stringList\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ScaleAdaptor(QObject *parent);
    virtual ~ScaleAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int setNumScreenMode(const QStringList &stringList);
    int setScreenMode(const QString &screenName, const QRect &geometry, bool primary, int rotation, double scale);
Q_SIGNALS: // SIGNALS
    void setNumScreenModeSignal(const QStringList &stringList);
    void setScreenModeSignal(const QString &screenName);
};

#endif
